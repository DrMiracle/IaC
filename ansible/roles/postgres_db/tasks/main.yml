---
- name: Install ACL package (fix permission issues)
  ansible.builtin.apt:
    name: acl
    state: present
    update_cache: yes

- name: Install PostgreSQL
  apt:
    name:
      - postgresql
      - "python3-psycopg2"
    state: present
    update_cache: yes

- name: Check for PostgreSQL cluster existence
  command: pg_lsclusters
  register: pg_clusters
  changed_when: false

- name: Check if PostgreSQL data directory exists
  ansible.builtin.stat:
    path: /var/lib/postgresql/14/main
  register: pg_data_dir

- name: Drop broken PostgreSQL cluster if data directory is missing
  command: pg_dropcluster 14 main --stop
  become: true

- name: Recreate PostgreSQL cluster if missing
  command: pg_createcluster 14 main --start
  become: true

- name: Ensure PostgreSQL is running and enabled
  service:
    name: postgresql
    state: started
    enabled: yes

- name: Add listen_addresses in postgresql.conf
  lineinfile:
    path: /etc/postgresql/14/main/postgresql.conf
    regexp: '^listen_addresses'
    line: "listen_addresses = '*'"
    state: present
  notify: restart postgresql

- name: Ensure pg_hba.conf allows replication
  lineinfile:
    path: /etc/postgresql/14/main/pg_hba.conf
    line: "host    replication     {{user}}      {{replica_ip}}/32     md5"
    state: present
  notify: restart postgresql

- name: Ensure pg_hba.conf allows replication
  lineinfile:
    path: /etc/postgresql/14/main/pg_hba.conf
    line: "host    all     {{user}}       {{replica_ip}}/32     md5"
    state: present
  notify: restart postgresql

- name: Create replication user
  postgresql_user:
    name: "{{ user }}"
    password: "{{ replication_password }}"
    role_attr_flags: REPLICATION
    state: present
  become: true
  become_user: postgres

- name: Create volleyball database
  become: true
  become_user: postgres
  postgresql_db:
    name: volleyball
    state: present

- name: Grant SELECT permissions to user on all existing tables
  become: true
  become_user: postgres
  postgresql_query:
    db: volleyball
    query: "GRANT SELECT ON ALL TABLES IN SCHEMA public TO {{user}};"

- name: Delete teams and players if exist
  become: true
  become_user: postgres
  postgresql_query:
    db: volleyball
    query: |
      DROP TABLE IF EXISTS teams, players;

- name: Create table teams
  become: true
  become_user: postgres
  postgresql_query:
    db: volleyball
    query: |
      CREATE TABLE IF NOT EXISTS teams (
        id_team SERIAL PRIMARY KEY,
        team_name TEXT,
        league_name varchar(15) not null check(
            league_name = 'Ліга 3' OR league_name = 'Ліга 2' OR
            league_name = 'Ліга 1' OR league_name = 'Вища ліга'),
        wins FLOAT
      );

- name: Create table players
  become: true
  become_user: postgres
  postgresql_query:
    db: volleyball
    query: |
      CREATE TABLE IF NOT EXISTS players(
        id_player SERIAL PRIMARY KEY,
        id_team INT REFERENCES teams(id_team),
        player_name TEXT,
        position varchar(15) not null check(
            position = 'Ліберо' OR position = 'Нападник' OR
            position = 'Сетер' OR position = 'Центральний'),
        height FLOAT
      );

- name: Insert data into teams
  become: true
  become_user: postgres
  postgresql_query:
    db: volleyball
    query: |
      INSERT INTO teams (team_name, league_name, wins) VALUES
      ('Перуджа', 'Вища ліга', 19),
      ('Бакром-Кажани', 'Ліга 1', 7)
      ON CONFLICT DO NOTHING;

- name: Insert data into players
  become: true
  become_user: postgres
  postgresql_query:
    db: volleyball
    query: |
      INSERT INTO players (id_team, player_name, position, height) VALUES
      (1, 'Олег Плотницький', 'Нападник', 194),
      (1, 'Сімоне Джаннеллі', 'Сетер', 200),
      (1, 'Себастьян Соле', 'Центральний', 202),
      (2, 'Василь Тупчій', 'Нападник', 192),
      (2, 'Ярослав Пампушко', 'Ліберо', 178)
      ON CONFLICT DO NOTHING;

- name: Create publication
  become: true
  become_user: postgres
  postgresql_query:
    db: volleyball
    query: |
      CREATE PUBLICATION my_publication ;

- name: Alter publication
  become: true
  become_user: postgres
  postgresql_query:
    db: volleyball
    query: |
      ALTER PUBLICATION my_publication ADD TABLE players;

- name: Grant permissions for schema
  become: yes
  become_user: postgres
  postgresql_privs:
    database: volleyball
    roles: "{{ user }}"
    privs: USAGE
    type: schema
    objs: public

- name: Grant permissions for table players
  become: yes
  become_user: postgres
  postgresql_privs:
    database: volleyball
    roles: "{{ user }}"
    privs: SELECT
    type: table
    objs: ALL_IN_SCHEMA

- name: Apply config changes by restarting PostgreSQL
  service:
    name: postgresql
    state: restarted