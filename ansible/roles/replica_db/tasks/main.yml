---
- name: Install ACL package (fix permission issues)
  ansible.builtin.apt:
    name: acl
    state: present
    update_cache: yes

- name: Install PostgreSQL
  apt:
    name:
      - postgresql
      - "python3-psycopg2"
    state: present
    update_cache: yes

- name: Check if PostgreSQL data directory exists
  ansible.builtin.stat:
    path: /var/lib/postgresql/14/main
  register: pg_data_dir

- name: Drop broken PostgreSQL cluster if data directory is missing
  command: pg_dropcluster 14 main --stop
  become: true
  become_user: postgres
  when: "not pg_data_dir.stat.exists"

- name: Recreate PostgreSQL cluster if missing
  command: pg_createcluster 14 main --start
  become: true
  become_user: postgres
  when: "not pg_data_dir.stat.exists"

- name: Ensure PostgreSQL cluster ownership is fixed
  command: pg_lsclusters
  register: pg_cluster_status
  changed_when: false

- name: Debug pg_lsclusters output
  debug:
    var: pg_cluster_status.stdout_lines

- name: Add listen_addresses in postgresql.conf
  lineinfile:
    path: /etc/postgresql/14/main/postgresql.conf
    regexp: '^listen_addresses'
    line: "listen_addresses = '*'"
    state: present
  notify: restart postgresql

- name: Ensure PostgreSQL is stopped
  service:
    name: postgresql
    state: stopped

- name: Remove existing PostgreSQL data directory if not empty
  file:
    path: /var/lib/postgresql/14/main
    state: absent
  when: pg_data_dir.stat.exists

- name: Create streaming replication on Replica
  command: >
    pg_basebackup -h {{ primary_ip }} -p 5432 -U {{ user }}
    -D /var/lib/postgresql/14/main -v -P
  environment:
    PGPASSWORD: "{{ replication_password }}"
  become_user: postgres

- name: Start PostgreSQL
  service:
    name: postgresql
    state: started
    enabled: yes

- name: Create subscription
  become: yes
  become_user: postgres
  postgresql_query:
    db: volleyball
    query: |
      CREATE SUBSCRIPTION my_subscription
      CONNECTION 'host={{ primary_ip }} port=5432 dbname=volleyball user={{ user }} password={{ replication_password }}'
      PUBLICATION my_publication;